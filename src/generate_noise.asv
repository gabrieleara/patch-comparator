function perturbations = generate_noise(spectra, Nperturbations)%, Nwavelengths)

[Nspectra, Nwavelengths] = size(spectra);

perturbations = zeros(Nspectra, Nperturbations, Nwavelengths);

[~, ~, labs] = spectra2color(spectra); % Precomputing labs

for pertIdx = 1:Nperturbations
    db = ((Nperturbations-pertIdx+1) * 2.5)^0.99;
    
    % This was meant to speed up, but heavier colors seem to undergo
    % heavier noises, so I try to use a color per color approach
%     perturbatedSig = awgn(spectra, db);
%     for spectrumIdx = 1:Nspectra
%         perturbations(spectrumIdx, pertIdx, :) = perturbatedSig(spectrumIdx, :);
%     end

    % This is the alternative approach
    for spectrumIdx = 1:Nspectra
        
        lab = squeeze(labs(:, spectrumIdx));
        
        actualdb
        
        actualdb = db * (((100 - lab(1)) / 100)^2 + 0.75);
        
        perturbatedSig = awgn(spectra(spectrumIdx, :), actualdb);
        perturbations(spectrumIdx, pertIdx, :) = perturbatedSig;
    end
end

end